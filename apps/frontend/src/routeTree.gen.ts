/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TeacherIndexRouteImport } from './routes/teacher/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'
import { Route as TeacherSubjectsSubjectIdChooseGroupRouteImport } from './routes/teacher/subjects/$subjectId/choose-group'
import { Route as TeacherSubjectsSubjectIdGroupsGroupIdMarksRouteImport } from './routes/teacher/subjects/$subjectId/groups/$groupId/marks'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherIndexRoute = TeacherIndexRouteImport.update({
  id: '/teacher/',
  path: '/teacher/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherSubjectsSubjectIdChooseGroupRoute =
  TeacherSubjectsSubjectIdChooseGroupRouteImport.update({
    id: '/teacher/subjects/$subjectId/choose-group',
    path: '/teacher/subjects/$subjectId/choose-group',
    getParentRoute: () => rootRouteImport,
  } as any)
const TeacherSubjectsSubjectIdGroupsGroupIdMarksRoute =
  TeacherSubjectsSubjectIdGroupsGroupIdMarksRouteImport.update({
    id: '/teacher/subjects/$subjectId/groups/$groupId/marks',
    path: '/teacher/subjects/$subjectId/groups/$groupId/marks',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/teacher': typeof TeacherIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/teacher/subjects/$subjectId/choose-group': typeof TeacherSubjectsSubjectIdChooseGroupRoute
  '/teacher/subjects/$subjectId/groups/$groupId/marks': typeof TeacherSubjectsSubjectIdGroupsGroupIdMarksRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/teacher': typeof TeacherIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/teacher/subjects/$subjectId/choose-group': typeof TeacherSubjectsSubjectIdChooseGroupRoute
  '/teacher/subjects/$subjectId/groups/$groupId/marks': typeof TeacherSubjectsSubjectIdGroupsGroupIdMarksRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/teacher/': typeof TeacherIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/teacher/subjects/$subjectId/choose-group': typeof TeacherSubjectsSubjectIdChooseGroupRoute
  '/teacher/subjects/$subjectId/groups/$groupId/marks': typeof TeacherSubjectsSubjectIdGroupsGroupIdMarksRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/teacher'
    | '/demo/form/address'
    | '/teacher/subjects/$subjectId/choose-group'
    | '/teacher/subjects/$subjectId/groups/$groupId/marks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/teacher'
    | '/demo/form/address'
    | '/teacher/subjects/$subjectId/choose-group'
    | '/teacher/subjects/$subjectId/groups/$groupId/marks'
  id:
    | '__root__'
    | '/'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/teacher/'
    | '/demo/form/address'
    | '/teacher/subjects/$subjectId/choose-group'
    | '/teacher/subjects/$subjectId/groups/$groupId/marks'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  TeacherIndexRoute: typeof TeacherIndexRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  TeacherSubjectsSubjectIdChooseGroupRoute: typeof TeacherSubjectsSubjectIdChooseGroupRoute
  TeacherSubjectsSubjectIdGroupsGroupIdMarksRoute: typeof TeacherSubjectsSubjectIdGroupsGroupIdMarksRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/': {
      id: '/teacher/'
      path: '/teacher'
      fullPath: '/teacher'
      preLoaderRoute: typeof TeacherIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/subjects/$subjectId/choose-group': {
      id: '/teacher/subjects/$subjectId/choose-group'
      path: '/teacher/subjects/$subjectId/choose-group'
      fullPath: '/teacher/subjects/$subjectId/choose-group'
      preLoaderRoute: typeof TeacherSubjectsSubjectIdChooseGroupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/subjects/$subjectId/groups/$groupId/marks': {
      id: '/teacher/subjects/$subjectId/groups/$groupId/marks'
      path: '/teacher/subjects/$subjectId/groups/$groupId/marks'
      fullPath: '/teacher/subjects/$subjectId/groups/$groupId/marks'
      preLoaderRoute: typeof TeacherSubjectsSubjectIdGroupsGroupIdMarksRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  TeacherIndexRoute: TeacherIndexRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  TeacherSubjectsSubjectIdChooseGroupRoute:
    TeacherSubjectsSubjectIdChooseGroupRoute,
  TeacherSubjectsSubjectIdGroupsGroupIdMarksRoute:
    TeacherSubjectsSubjectIdGroupsGroupIdMarksRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
