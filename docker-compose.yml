services:
    backend:
        container_name: mic-edu-journal-backend
        restart: unless-stopped
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            - NODE_ENV=production
        expose:
            - "3000"
    postgres:
        container_name: mic-edu-journal-postgres
        image: postgres:latest
        restart: unless-stopped
        environment:
            - POSTGRES_USER=mic-edu-journal
            - POSTGRES_PASSWORD=fd5b47ab8081ef9597d371de
            - POSTGRES_DB=mic-edu-journal
        volumes:
            - postgres_data:/var/lib/postgresql/data
    redis:
        container_name: mic-edu-journal-redis
        image: redis:latest
        command: ["redis-server", "--maxmemory-policy", "noeviction"]
        restart: unless-stopped
        volumes:
            - redis_data:/data
    minio:
        container_name: mic-edu-journal-minio
        image: minio/minio:latest
        command: ["minio", "server", "/data", "--console-address", ":9001"]
        restart: unless-stopped
        environment:
            - MINIO_ACCESS_KEY=mic-edu-journal
            - MINIO_SECRET_KEY=fd5b47ab8081ef9597d371de
        ports:
            - 9000:9000
            - 9001:9001
        volumes:
            - minio_data:/data
        healthcheck:
            test: ["CMD", "mc", "ready", "local"]
            interval: 5s
            timeout: 5s
            retries: 5
    caddy:
        container_name: mic-edu-journal-caddy
        image: caddy:latest
        restart: unless-stopped
        environment:
            - CADDY_LOG_LEVEL=INFO
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - ./apps/frontend/dist:/srv/frontend
            - caddy_data:/data
            - caddy_config:/config
        depends_on:
            - backend
volumes:
    postgres_data:
    redis_data:
    minio_data:
    caddy_data:
    caddy_config:

networks:
    default: {}
